#!/usr/bin/env php
<?php

function bf_run($in) {
	// Create an array holding the appropriate values for each BrainFuck token
	//$tokens = array(">","<","+","-",".",",","[","]");
	$code = file_get_contents($in); 	// pour contents of $in into $code
	$code = explode(" ", $code); 		// separate $code into array by spaces
	$code = str_split(implode($code));	// set $code to the splitted-imploded $code array >:O what!?

	$loops1 = array();
	$loops2 = array();
	$memory = array_fill(0, 30000, 0);
	$ptr = 0;

	$i = -1;
	while ($i < sizeof($code)) {
		$i++;
		//echo "DEBUG: $i - $ptr\n";
		$a = $code[$i];
		if ($a == ">") {
			$ptr++;
		} elseif ($a == "<") {
			$ptr--;
		} elseif ($a == "+") {
			$memory[$ptr]++;
		} elseif ($a == "-") {
			$memory[$ptr]--;
		} elseif ($a == ".") {
			echo chr($memory[$ptr]);
		} elseif ($a == ",") {
			$input = fgets(STDIN);
			$memory[$ptr] = ord($input[0]);
		} elseif ($a == "[") {
			array_push($loops1, $i);
		} elseif ($a == "]") {
			if ($memory[$ptr] != 0) {
				$i = $loops1[sizeof($loops1)-1];
				continue;
			} else {
				unset($code[$i]);
				unset($loops1[sizeof($loops1)-1]);
			}
		}
	}
	echo "\n";
}

function bf_compile($in, $out) {
	// Create an array holding the appropriate values for each BrainFuck token
	$c = array(
	">" => "++ptr;",
	"<" => "--ptr;",
	"+" => "++*ptr;",
	"-" => "--*ptr;",
	"." => "putchar(*ptr);",
	"," => "*ptr=getchar();",
	"[" => "while (*ptr) {",
	"]" => "}"
	);
	// WARNING: Below, there is repeated code >:(
	$code = file_get_contents($in); 	// pour contents of $in into $code
	$code = explode(" ", $code); 		// separate $code into array by spaces
	$code = str_split(implode($code));	// set $code to the splitted-imploded $code array >:O what!?

	$c_code = array();	// Create array to hold compiled C code
	// add some header C code to the $c_code array
	array_push($c_code, "char array[30000];");
	array_push($c_code, "char *ptr=array;");
	array_push($c_code, "int main() {");

	// Basically, this loop goes through $code
	// and inserts the appropriate C code, for 
	// each BF token..its that simple
	foreach ($code as $val) {
		foreach ($c as $i => $v) {
			if ($val == $i) {
				array_push($c_code, $v);
			}
		}
	}
	array_push($c_code, "}"); // Add the final piece of the puzzle
	file_put_contents($out, implode(" ", $c_code)); // put the C code into the destination folder!
}
// This handles the command line arguments
if (!$argv[1]) {
	die("Error: Need Option Parameter\n");
} else {
	if (!$argv[2]) {
		die("Error: Need Input File\n");
	} else {
		if ($argv[1] == "compile") {
			if (!$argv[3]) { die("Error: Need Ouput File\n"); }
			bf_compile($argv[2], $argv[3]);
		} elseif ($argv[1] == "run") {
			bf_run($argv[2]);
		}
	}
}
?>